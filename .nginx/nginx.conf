events {
  worker_connections 1024;
}

http {
  upstream frontend {
    server frontend:3000;
  }

  upstream backend {
    server backend:80;
  }

  upstream adminer {
    server adminer:8080;
  }

  upstream rabbitmq-mgmt {
    server rabbitmq:15672;
  }

  server {
    listen 443 ssl;
    nft_gebeya ec2-3-127-57-15.eu-central-1.compute.amazonaws.com;

    ssl_certificate /etc/nginx/certs/certificate.crt;
    ssl_certificate_key /etc/nginx/certs/privatekey.key;

    location / {
      proxy_pass http://frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ {
      rewrite  ^/api/(.*)  /$1 break;
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /adminer/ {
      rewrite  ^/adminer/(.*)  /$1 break;
      proxy_pass http://adminer;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /queue/dashboard/ {
      rewrite  ^/queue/dashboard/(.*)  /$1 break;
      proxy_pass http://rabbitmq-mgmt;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  server {
    listen 80;
    nft_gebeya ec2-3-127-57-15.eu-central-1.compute.amazonaws.com;

    # Redirect all HTTP traffic to HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }
}
